/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Interface.PDI_Atividade_1;
import Interface.Interface_Realcar_tons;
import Interface.Interface_escurecer_clarear;
import Interface.Interface_Realcar_intervalo;
import Interface.Interface_Zoom;
import Interface.Histograma;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author akume
 */
public class Interface extends javax.swing.JFrame {
      PDI_Atividade_1 matriz;
      Interface_escurecer_clarear clarear_escurecer;
      Interface_Realcar_intervalo realcar_intervalo;
      Interface_Zoom zoom;
      Interface_Realcar_tons tons;
      Histograma hist;
    /**
     * Creates new form Interface
     */
    public Interface() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem27 = new javax.swing.JMenuItem();
        jMenuItem28 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jMenu6 = new javax.swing.JMenu();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane2 = new javax.swing.JTextPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextPane3 = new javax.swing.JTextPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextPane4 = new javax.swing.JTextPane();
        jToggleButton1 = new javax.swing.JToggleButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem14 = new javax.swing.JMenuItem();
        jMenuItem13 = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenuItem15 = new javax.swing.JMenuItem();
        jMenuItem16 = new javax.swing.JMenuItem();
        jMenuItem19 = new javax.swing.JMenuItem();
        jMenuItem20 = new javax.swing.JMenuItem();
        jMenuItem21 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenu7 = new javax.swing.JMenu();
        jMenuItem17 = new javax.swing.JMenuItem();
        jMenuItem18 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem22 = new javax.swing.JMenuItem();
        jMenuItem24 = new javax.swing.JMenuItem();
        jMenuItem25 = new javax.swing.JMenuItem();
        jMenuItem23 = new javax.swing.JMenuItem();
        jMenu8 = new javax.swing.JMenu();
        jMenuItem29 = new javax.swing.JMenuItem();

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jMenu3.setText("jMenu3");

        jMenuItem27.setText("jMenuItem27");

        jMenuItem28.setText("jMenuItem28");

        jMenu5.setText("jMenu5");

        jMenu6.setText("jMenu6");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Matriz 1:");

        jLabel2.setText("Número de Linhas:");

        jLabel3.setText("Número de Colunas:");

        jScrollPane2.setViewportView(jTextPane2);

        jScrollPane3.setViewportView(jTextPane3);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jScrollPane2)))
                    .addComponent(jLabel1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jLabel4.setText("Matriz 2:");

        jLabel5.setText("Número de Linhas:");

        jLabel6.setText("Número de Colunas:");

        jScrollPane1.setViewportView(jTextPane1);

        jScrollPane4.setViewportView(jTextPane4);

        jToggleButton1.setText("Selecionar Arquivo");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1))
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                .addComponent(jToggleButton1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jToggleButton1))))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jMenu1.setText("Escurecer/Clarear");

        jMenuItem1.setText("Escurecer");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Clarear");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("EscurecerDiv");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem4.setText("ClarearMult");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuItem9.setText("Espelhamento Horizontal");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem9);

        jMenuItem10.setText("Espelhamento Vertical");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem10);

        jMenuItem8.setText("Binarização");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem8);

        jMenuItem14.setText("Reduzir Nível de Cinza(2 níveis)");
        jMenuItem14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem14ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem14);

        jMenuItem13.setText("Reduzir Nível de Cinza(4 níveis)");
        jMenuItem13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem13ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem13);

        jMenuItem12.setText("Reduzir Nível de Cinza(8 níveis)");
        jMenuItem12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem12ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem12);

        jMenuItem11.setText("Reduzir Nível de Cinza(16 níveis)");
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem11);

        jMenuItem15.setText("Realçar intervalo");
        jMenuItem15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem15ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem15);

        jMenuItem16.setText("Realçar Intervalo Dentro e fora");
        jMenuItem16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem16ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem16);

        jMenuItem19.setText("Realçar tons");
        jMenuItem19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem19ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem19);

        jMenuItem20.setText("Extrair RGB");
        jMenuItem20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem20ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem20);

        jMenuItem21.setText("Juntar RGB");
        jMenuItem21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem21ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem21);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Girar");

        jMenuItem5.setText("Girar90 Graus");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem5);

        jMenuItem6.setText("Girar90Graus Negativo");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem6);

        jMenuItem7.setText("Girar 180 graus");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem7);

        jMenuBar1.add(jMenu2);

        jMenu7.setText("Ampliar/Diminuir");

        jMenuItem17.setText("Zoom");
        jMenuItem17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem17ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem17);

        jMenuItem18.setText("Minimizar");
        jMenuItem18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem18ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem18);

        jMenuBar1.add(jMenu7);

        jMenu4.setText("Filtros");

        jMenuItem22.setText("Filtro Média");
        jMenuItem22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem22ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem22);

        jMenuItem24.setText("Laplaciano");
        jMenuItem24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem24ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem24);

        jMenuItem25.setText("Filtro Mediana");
        jMenuItem25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem25ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem25);

        jMenuItem23.setText("High Boost");
        jMenuItem23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem23ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem23);

        jMenuBar1.add(jMenu4);

        jMenu8.setText("Equalização De Histograma");

        jMenuItem29.setText("Equalização De Histograma");
        jMenuItem29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem29ActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuItem29);

        jMenuBar1.add(jMenu8);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        try {
            //matriz = new PDI_Atividade_1(jTextField1.getText());
            matriz = new PDI_Atividade_1();
            jTextPane2.setText(String.valueOf(matriz.getLinha()));
            jTextPane3.setText(String.valueOf(matriz.getColuna()));
            
        } catch (IOException ex) {
            Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
          try {
              
              int[][] aux= matriz.getMatriz();
              int aux2=0;
              clarear_escurecer= new Interface_escurecer_clarear();
              clarear_escurecer.setModal(true);
              clarear_escurecer.setVisible(true);
              aux2=Integer.valueOf(clarear_escurecer.jTextField1.getText());
              matriz.escurecer(aux,aux2);
              matriz.exibir(aux);
              matriz.alterar_arquivo(matriz.getArquivo().getAbsolutePath(),aux);
                
                   
              
          } catch (FileNotFoundException ex) {
              Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
          } catch (IOException ex) {
              Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
          }
        
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        try {
              
                    int[][] aux= matriz.getMatriz();
                    int aux2=0;
                    clarear_escurecer= new Interface_escurecer_clarear();
                    clarear_escurecer.setModal(true);
                    clarear_escurecer.setVisible(true);
                    aux2=Integer.valueOf(clarear_escurecer.jTextField1.getText());
                    matriz.clarear(aux,aux2);
                    matriz.exibir(aux);
                    matriz.alterar_arquivo(matriz.getArquivo().getAbsolutePath(),aux);
               
              
          } catch (FileNotFoundException ex) {
              Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
          } catch (IOException ex) {
              Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
          }
        
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        try {
              
                    int[][] aux= matriz.getMatriz();
                    double aux2=0;
                    clarear_escurecer= new Interface_escurecer_clarear();
                    clarear_escurecer.setModal(true);
                    clarear_escurecer.setVisible(true);
                    aux2=Integer.valueOf(clarear_escurecer.jTextField1.getText());
                    matriz.escurecerDiv(aux,aux2);
                    matriz.exibir(aux);
                    matriz.alterar_arquivo(matriz.getArquivo().getAbsolutePath(),aux);
              
          } catch (FileNotFoundException ex) {
              Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
          } catch (IOException ex) {
              Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
          }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
       try {
              
                    int[][] aux= matriz.getMatriz();
                    double aux2=0;
                    clarear_escurecer= new Interface_escurecer_clarear();
                    clarear_escurecer.setModal(true);
                    clarear_escurecer.setVisible(true);
                    aux2=Integer.valueOf(clarear_escurecer.jTextField1.getText());
                    matriz.clarearMult(aux,aux2);
                    matriz.exibir(aux);
                    matriz.alterar_arquivo(matriz.getArquivo().getAbsolutePath(),aux);
              
          } catch (FileNotFoundException ex) {
              Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
          } catch (IOException ex) {
              Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
          }
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        try {
              
              int[][] aux= matriz.getMatriz();
              matriz.Girar90(aux);
              aux= matriz.getMatriz2();
              matriz.exibir(aux);
              matriz.alterar_arquivo(matriz.getArquivo().getAbsolutePath(),aux);
              jTextPane1.setText(String.valueOf(matriz.getLinha()));
              jTextPane4.setText(String.valueOf(matriz.getColuna()));
              
          } catch (FileNotFoundException ex) {
              Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
          } catch (IOException ex) {
              Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
          }
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        try {
              
              int[][] aux= matriz.getMatriz();
              matriz.Girar90neg(aux);
              aux= matriz.getMatriz2();
              matriz.exibir(aux);
              matriz.alterar_arquivo(matriz.getArquivo().getAbsolutePath(),aux);
              jTextPane1.setText(String.valueOf(matriz.getLinha()));
              jTextPane4.setText(String.valueOf(matriz.getColuna()));
              
          } catch (FileNotFoundException ex) {
              Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
          } catch (IOException ex) {
              Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
          }
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        try {
              
              int[][] aux= matriz.getMatriz();
              matriz.Girar180(aux);
              aux= matriz.getMatriz2();
              matriz.exibir(aux);
              matriz.alterar_arquivo(matriz.getArquivo().getAbsolutePath(),aux);
              jTextPane1.setText(String.valueOf(matriz.getLinha()));
              jTextPane4.setText(String.valueOf(matriz.getColuna()));
              
          } catch (FileNotFoundException ex) {
              Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
          } catch (IOException ex) {
              Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
          }
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
       try {
              
              int[][] aux= matriz.getMatriz();
              int aux2=0;
              clarear_escurecer= new Interface_escurecer_clarear();
              clarear_escurecer.setModal(true);
              clarear_escurecer.setVisible(true);
              aux2=Integer.valueOf(clarear_escurecer.jTextField1.getText());
              matriz.binarização(aux,aux2);
              matriz.exibir(aux);
              matriz.alterar_arquivo(matriz.getArquivo().getAbsolutePath(),aux);
                
                   
              
          } catch (FileNotFoundException ex) {
              Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
          } catch (IOException ex) {
              Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
          }
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        try {
              
              int[][] aux= matriz.getMatriz();
              matriz.espelharHorizontal(aux);
              aux= matriz.getMatriz2();
              matriz.exibir(aux);
              matriz.alterar_arquivo(matriz.getArquivo().getAbsolutePath(),aux);
              jTextPane1.setText(String.valueOf(matriz.getLinha()));
              jTextPane4.setText(String.valueOf(matriz.getColuna()));
              
          } catch (FileNotFoundException ex) {
              Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
          } catch (IOException ex) {
              Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
          }
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        try {
              
              int[][] aux= matriz.getMatriz();
              matriz.espelharVertical(aux);
              aux= matriz.getMatriz2();
              matriz.exibir(aux);
              matriz.alterar_arquivo(matriz.getArquivo().getAbsolutePath(),aux);
              jTextPane1.setText(String.valueOf(matriz.getLinha()));
              jTextPane4.setText(String.valueOf(matriz.getColuna()));
              
          } catch (FileNotFoundException ex) {
              Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
          } catch (IOException ex) {
              Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
          }
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed
        try {
              
                    int[][] aux= matriz.getMatriz();
                    matriz.ReduzirTonsCinza(aux, 16);
                    matriz.exibir(aux);
                    matriz.alterar_arquivo_tons_cinza(matriz.getArquivo().getAbsolutePath(), aux, 16);
              
          } catch (FileNotFoundException ex) {
              Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
          } catch (IOException ex) {
              Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
          }
    }//GEN-LAST:event_jMenuItem11ActionPerformed

    private void jMenuItem12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem12ActionPerformed
        try {
              
                    int[][] aux= matriz.getMatriz();
                    matriz.ReduzirTonsCinza(aux, 8);
                    matriz.exibir(aux);
                    matriz.alterar_arquivo_tons_cinza(matriz.getArquivo().getAbsolutePath(), aux, 8);
              
          } catch (FileNotFoundException ex) {
              Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
          } catch (IOException ex) {
              Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
          }
    }//GEN-LAST:event_jMenuItem12ActionPerformed

    private void jMenuItem13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem13ActionPerformed
        try {
              
                    int[][] aux= matriz.getMatriz();
                    matriz.ReduzirTonsCinza(aux, 4);
                    matriz.exibir(aux);
                    matriz.alterar_arquivo_tons_cinza(matriz.getArquivo().getAbsolutePath(), aux, 4);
              
          } catch (FileNotFoundException ex) {
              Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
          } catch (IOException ex) {
              Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
          }
    }//GEN-LAST:event_jMenuItem13ActionPerformed

    private void jMenuItem14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem14ActionPerformed
        try {
              
                    int[][] aux= matriz.getMatriz();
                    matriz.ReduzirTonsCinza(aux, 2);
                    matriz.exibir(aux);
                    matriz.alterar_arquivo_tons_cinza(matriz.getArquivo().getAbsolutePath(), aux, 2);
              
          } catch (FileNotFoundException ex) {
              Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
          } catch (IOException ex) {
              Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
          }
    }//GEN-LAST:event_jMenuItem14ActionPerformed

    private void jMenuItem15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem15ActionPerformed
       try {
              
                    int[][] aux= matriz.getMatriz();
                    int aux2,aux3,aux4=0;
                    realcar_intervalo= new Interface_Realcar_intervalo(this,true);
                    realcar_intervalo.setModal(true);
                    realcar_intervalo.setVisible(true);
                    aux2=Integer.valueOf(realcar_intervalo.jTextField1.getText());
                    aux3=Integer.valueOf(realcar_intervalo.jTextField2.getText());
                    aux4=Integer.valueOf(realcar_intervalo.jTextField3.getText());
                    matriz.RealcarIntervalo(aux, aux2, aux3,aux4);
                    matriz.exibir(aux);
                    matriz.alterar_arquivo(matriz.getArquivo().getAbsolutePath(),aux);
              
          } catch (FileNotFoundException ex) {
              Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
          } catch (IOException ex) {
              Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
          }
    }//GEN-LAST:event_jMenuItem15ActionPerformed

    private void jMenuItem16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem16ActionPerformed
        try {
              
                    int[][] aux= matriz.getMatriz();
                    int aux2,aux3,aux4,aux5=0;
                    realcar_intervalo= new Interface_Realcar_intervalo(this,true);
                    realcar_intervalo.setModal(true);
                    realcar_intervalo.setVisible(true);
                    aux2=Integer.valueOf(realcar_intervalo.jTextField1.getText());
                    aux3=Integer.valueOf(realcar_intervalo.jTextField2.getText());
                    aux4=Integer.valueOf(realcar_intervalo.jTextField3.getText());
                    aux5=Integer.valueOf(realcar_intervalo.jTextField4.getText());
                    matriz.RealcarIntervalo2(aux,aux2, aux3,aux4,aux5);
                    matriz.exibir(aux);
                    matriz.alterar_arquivo(matriz.getArquivo().getAbsolutePath(),aux);
              
          } catch (FileNotFoundException ex) {
              Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
          } catch (IOException ex) {
              Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
          }
    }//GEN-LAST:event_jMenuItem16ActionPerformed

    private void jMenuItem17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem17ActionPerformed
        try {
                    
                    int[][] aux= matriz.getMatriz();
                    int aux2=0;
                    zoom = new Interface_Zoom(this,true);
                    zoom.setModal(true);
                    zoom.setVisible(true);
                    aux2=Integer.valueOf(zoom.jTextField1.getText());
                    matriz.Zoom(aux,aux2);
                    aux=matriz.getMatriz2();
                    jTextPane1.setText(String.valueOf(matriz.getLinha2()));
                    jTextPane4.setText(String.valueOf(matriz.getColuna2()));
                    matriz.exibir2(aux);
                    matriz.alterar_arquivo_2(matriz.getArquivo().getAbsolutePath(),aux);
              
          } catch (FileNotFoundException ex) {
              Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
          } catch (IOException ex) {
              Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
          }
    }//GEN-LAST:event_jMenuItem17ActionPerformed

    private void jMenuItem18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem18ActionPerformed
        try {
                    
                    int[][] aux= matriz.getMatriz();
                    int aux2=0;
                    zoom = new Interface_Zoom(this,true);
                    zoom.setModal(true);
                    zoom.setVisible(true);
                    aux2=Integer.valueOf(zoom.jTextField1.getText());
                    matriz.Minimizar(aux,aux2);
                    aux=matriz.getMatriz2();
                    jTextPane1.setText(String.valueOf(matriz.getLinha2()));
                    jTextPane4.setText(String.valueOf(matriz.getColuna2()));
                    matriz.exibir2(aux);
                    matriz.alterar_arquivo_2(matriz.getArquivo().getAbsolutePath(),aux);
              
          } catch (FileNotFoundException ex) {
              Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
          } catch (IOException ex) {
              Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
          }
    }//GEN-LAST:event_jMenuItem18ActionPerformed

    private void jMenuItem19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem19ActionPerformed
        try {
              
                    int[][] aux= matriz.getMatriz();
                    float aux2=0;
                    tons= new Interface_Realcar_tons(this,true);
                    tons.setModal(true);
                    tons.setVisible(true);
                    aux2=Float.valueOf(tons.jTextField1.getText());
                    matriz.transformarPotencia(aux, aux2);
                    aux=matriz.getMatriz2();
                    matriz.exibir(aux);
                    matriz.alterar_arquivo(matriz.getArquivo().getAbsolutePath(),aux);
              
          } catch (FileNotFoundException ex) {
              Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
          } catch (IOException ex) {
              Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
          }
    }//GEN-LAST:event_jMenuItem19ActionPerformed

    private void jMenuItem20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem20ActionPerformed
           try {
              
              int[][] aux= matriz.getMatriz();
              //matriz.exibir(aux);
              System.out.println(matriz.getMagic_number() + "\n");
              if(matriz.getMagic_number().equals("P3")){
                  matriz.extrair_RGB(matriz.getArquivo().getAbsolutePath(), aux);
                  matriz.exibirB(aux);
                  matriz.exibirR(aux);
                  matriz.exibirG(aux);
              }else{
                 
                 System.out.println("Arquivo não é PPM");
                 matriz.alterar_arquivo(matriz.getArquivo().getAbsolutePath(),aux);
              }
                
                   
              
          } catch (FileNotFoundException ex) {
              Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
          } catch (IOException ex) {
              Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
          }        
    }//GEN-LAST:event_jMenuItem20ActionPerformed

    private void jMenuItem21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem21ActionPerformed
        try {
              
              int[][] aux= matriz.getMatrizR();
              int[][] aux2= matriz.getMatrizG();
              int[][] aux3= matriz.getMatrizB();
              //matriz.exibir(aux);
              //System.out.println(matriz.getMagic_number() + "\n");
             if(matriz.getMagic_number().equals("P3")){

                    matriz.juntar_RGB(matriz.getArquivo().getAbsolutePath(),aux,aux2,aux3);
                 
              }else{
                 
                 System.out.println("Arquivo não é PPM");
                 matriz.alterar_arquivo(matriz.getArquivo().getAbsolutePath(),aux);
              }
                
                   
              
          } catch (FileNotFoundException ex) {
              Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
          } catch (IOException ex) {
              Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
          }        
    }//GEN-LAST:event_jMenuItem21ActionPerformed

    private void jMenuItem22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem22ActionPerformed
        try {
              
              int[][] aux= matriz.getMatriz();
              int ans = Integer.parseInt(JOptionPane.showInputDialog("Insira a Dimensão do Filtro"));
              matriz.filtroMedia(aux,ans);
              matriz.exibir(aux);
              matriz.alterar_arquivo(matriz.getArquivo().getAbsolutePath(),aux);
                
                   
              
          } catch (FileNotFoundException ex) {
              Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
          } catch (IOException ex) {
              Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
          }
        
    }//GEN-LAST:event_jMenuItem22ActionPerformed

    private void jMenuItem24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem24ActionPerformed
        try {
              
              int[][] aux= matriz.getMatriz();
              matriz.filtroLaplaciano(aux, 0, 1);
              matriz.exibir(aux);
              matriz.alterar_arquivo(matriz.getArquivo().getAbsolutePath(),aux);
                
                   
              
          } catch (FileNotFoundException ex) {
              Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
          } catch (IOException ex) {
              Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
          }
    }//GEN-LAST:event_jMenuItem24ActionPerformed

    private void jMenuItem25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem25ActionPerformed
        try {
              
              int[][] aux= matriz.getMatriz();
              int ans = Integer.parseInt(JOptionPane.showInputDialog("Insira a Dimensão do Filtro"));
              matriz.filtroMediano(aux,ans);
              matriz.exibir(aux);
              matriz.alterar_arquivo(matriz.getArquivo().getAbsolutePath(),aux);
                
                   
              
          } catch (FileNotFoundException ex) {
              Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
          } catch (IOException ex) {
              Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
          }
    }//GEN-LAST:event_jMenuItem25ActionPerformed

    private void jMenuItem29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem29ActionPerformed
        try {
              
              int[][] aux= matriz.getMatriz();
              int[][] aux2;
              aux2=matriz.equalizacaoHistograma(aux);
              //hist= new Histograma(this,true,aux2);
              //hist.setModal(true);
              //hist.setVisible(true);
              matriz.alterar_arquivo(matriz.getArquivo().getAbsolutePath(),aux2);
                
                   
              
          } catch (FileNotFoundException ex) {
              Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
          } catch (IOException ex) {
              Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
          }
    }//GEN-LAST:event_jMenuItem29ActionPerformed

    private void jMenuItem23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem23ActionPerformed
        try {
              
              int[][] aux= new int[matriz.getLinha()][matriz.getColuna()];
              int ans = Integer.parseInt(JOptionPane.showInputDialog("Insira a Dimensão do Filtro"));
              aux = matriz.Filtro_HighBoost(aux, ans);
              matriz.exibir(aux);
              matriz.alterar_arquivo(matriz.getArquivo().getAbsolutePath(),aux);
                
                   
              
          } catch (FileNotFoundException ex) {
              Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
          } catch (IOException ex) {
              Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
          }
        
    }//GEN-LAST:event_jMenuItem23ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenu jMenu8;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem15;
    private javax.swing.JMenuItem jMenuItem16;
    private javax.swing.JMenuItem jMenuItem17;
    private javax.swing.JMenuItem jMenuItem18;
    private javax.swing.JMenuItem jMenuItem19;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem20;
    private javax.swing.JMenuItem jMenuItem21;
    private javax.swing.JMenuItem jMenuItem22;
    private javax.swing.JMenuItem jMenuItem23;
    private javax.swing.JMenuItem jMenuItem24;
    private javax.swing.JMenuItem jMenuItem25;
    private javax.swing.JMenuItem jMenuItem27;
    private javax.swing.JMenuItem jMenuItem28;
    private javax.swing.JMenuItem jMenuItem29;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JTextPane jTextPane2;
    private javax.swing.JTextPane jTextPane3;
    private javax.swing.JTextPane jTextPane4;
    private javax.swing.JToggleButton jToggleButton1;
    // End of variables declaration//GEN-END:variables
}
